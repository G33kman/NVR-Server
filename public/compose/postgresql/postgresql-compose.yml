services:
  postgresql: # PostgreSQL A powerful, open-source, object-relational database management system
    container_name: ${APP_NAME}
    image: "${NAME}:${TAG}"
    env_file:
      - ${DIR_ROOT}/.env
      - ${APP_NAME}ql.env
    entrypoint: ["/bin/bash", "/custom-entrypoint.sh"]
    command: postgres
    volumes:
      - "${SYS_TIME}"
      - "${APP_NAME}ql_data:${DIR_INT_DATA}"
      - "${DIR_DATA}/${APP_NAME}ql/scripts:/${DIR_INT_INIT}:ro"
      - "${DIR_DATA}/${APP_NAME}ql/scripts/${CUSTOM_ENTRYPOINT_FILE}:/${CUSTOM_ENTRYPOINT_FILE}:ro"
    security_opt:
      - ${PRIVILEGES_DEFAULT}
    privileged: false
    restart: ${RESTART_NORMAL}
    depends_on:
      traefik:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '${CPU_LIMIT}'
          memory: '${RAM_LIMIT}'
        reservations:
          cpus: '${CPU_RESERVE}'
          memory: '${RAM_RESERVE}'
    healthcheck:
      test: ["CMD-SHELL", "$$DB_HC_CMD -U $$POSTGRES_USER -d $$POSTGRES_DB -q"] # Use to ensure that the db is actually ready
      interval: ${HC_INTERVAL}
      timeout: ${HC_TIMEOUT}
      retries: ${HC_RETRIES}
      start_period: ${HC_START_PERIOD}
      start_interval: ${HC_START_INTERVAL}
    hostname: ${APP_NAME}ql
    # user: "${PUID}:${PGID}"
    networks:
      private:
        ipv4_address: ${IP_PRIVATE}
    secrets:
      # Super Admin Password
      - POSTGRES_PASSWORD
      # Container User Password
      - POSTGRES_USER_PASSWORD
    labels:
      ## Custom Labels
      - "${LABEL_DOMAIN}=${APP_NAME}"
      ## Portainer Access
      - "io.portainer.accesscontrol.teams=API-Team"