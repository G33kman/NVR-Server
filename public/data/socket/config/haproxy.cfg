global
    log stdout format raw daemon "${LOG_LEVEL}"

    # Container Management Variables
    setenv TRAEFIK_IP 10.2.0.2
    setenv PORTAINER_IP 10.2.0.3
    setenv KUMA_IP 10.2.0.6
    setenv HOMEPAGE_IP 10.2.0.7
    setenv ALLOY_IP 10.2.0.19

    # Combined IP Addresses Variable (Comma-separated list when adding container variables)
    setenv FULL_ACCESS_LIST ${PORTAINER_IP}
    setenv READ_ONLY_ACCESS_LIST ${TRAEFIK_IP},${HOMEPAGE_IP},${KUMA_IP},${ALLOY_IP}

    pidfile /run/haproxy.pid
    maxconn 4000

    # Turn on stats unix socket
    server-state-file /var/lib/haproxy/server-state

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option http-server-close
    option redispatch
    retries 3
    timeout http-request 10s
    timeout queue 1m
    timeout connect 10s
    timeout client 10m
    timeout server 10m
    timeout http-keep-alive 10s
    timeout check 10s
    maxconn 3000

    # Allow seamless reloads
    load-server-state-from-file global

    # Use provided example error pages
    errorfile 400 /usr/local/etc/haproxy/errors/400.http
    errorfile 403 /usr/local/etc/haproxy/errors/403.http
    errorfile 408 /usr/local/etc/haproxy/errors/408.http
    errorfile 500 /usr/local/etc/haproxy/errors/500.http
    errorfile 502 /usr/local/etc/haproxy/errors/502.http
    errorfile 503 /usr/local/etc/haproxy/errors/503.http
    errorfile 504 /usr/local/etc/haproxy/errors/504.http

backend dockerbackend
    server dockersocket $SOCKET_PATH

backend docker-events
    server dockersocket $SOCKET_PATH
    timeout server 30s

frontend dockerfrontend
    bind ${BIND_CONFIG}
    http-request deny unless METH_GET || { env(POST) -m bool } || METH_DELETE

    # Portainer Full Access
    http-request allow if { src -m reg ${FULL_ACCESS_LIST//,/\|} } { path,url_dec -m reg -i ^(/v[\d\.]+)?/.* }

    # Traefik, Homepage, Kuma, and cAdvisor Read Access
    http-request allow if { src -m reg ${READ_ONLY_ACCESS_LIST//,/\|} } { path,url_dec -m reg -i ^(/v[\d\.]+)?/(containers(|/.*)?|images|networks|services|tasks|volumes|version|info|system|events|_ping)$ }

    http-request deny log
    default_backend dockerbackend

    use_backend docker-events if { path,url_dec -m reg -i ^(/v[\d\.]+)?/events }